# Install Java for either RedHat or Debian family OS.
# -   Specific platform and version are defined with `install_jdk_package`
#     If no version is specified, latest OpenJDK 8 is installed.
# -   Could be used to update Java platform with `install_jdk_update: yes`
# -   Verifies that Java platform is operational
#
#  Usage example
#
#  tasks:
#    - import_tasks: tasks/task_install-jdk.yml
#      vars:
#        install_jdk_update: no
#        install_jdk_package: java-1.7.0-openjdk
---
- name: "Set Java install state to 'present'..."
  set_fact:
    install_jdk_state: present

- name: "...or 'latest' if upgrading"
  set_fact:
    install_jdk_state: latest
  when: install_jdk_update | default( false )

- name: "Set Java platform to OpenJDK 8 if not defined"
  set_fact:
    install_jdk_package: "{% if ansible_os_family == 'RedHat' %}java-1.8.0-openjdk{% elif ansible_os_family == 'Debian' %}openjdk-8-jre-headless{% else %}UNKNOWN{% endif %}"
  when: install_jdk_package is undefined

# Install specific Java version from repository
- import_tasks: task_install-from-repo.yml
  vars:
    install_from_repo_packages: "{{ install_jdk_package }}"
    install_from_repo_state: "{{ install_jdk_state }}"

- name: "Get Java version"
  command: java -version
  register: install_jdk_version_test
  ignore_errors: yes
  changed_when: false

- name: "Assert Java is operational"
  assert:
    that:
      - "install_jdk_version_test.rc == 0"
      - "'version' in install_jdk_version_test.stderr"
      - "'Runtime Environment' in install_jdk_version_test.stderr"

# Workaround for OpenJDK [issue][1] on Ubuntu from 2015
# -   ubuntu package has broken cacerts
# [1]: https://github.com/docker-library/openjdk/issues/19
- name: "Fix :: Ubuntu :: Refresh OpenJDK ca-certificates"
  become: yes
  command: /var/lib/dpkg/info/ca-certificates-java.postinst configure
  changed_when: false
  when:
    - ansible_distribution == 'Ubuntu'
    - "'OpenJDK Runtime Environment' in install_jdk_version_test.stderr"
